generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Case {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String
  description String
  status      String

  users                CaseUser[]
  CaseToTaggedEvidence CaseToTaggedEvidence[]
  CaseToMediaEvidence  CaseToMediaEvidence[]
}

model CaseToTaggedEvidence {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  caseId     String
  evidenceId String

  case     Case           @relation(fields: [caseId], references: [id])
  evidence TaggedEvidence @relation(fields: [evidenceId], references: [id])
}

model CaseToMediaEvidence {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  caseId     String
  evidenceId String

  case     Case           @relation(fields: [caseId], references: [id])
  evidence MediaEvidence? @relation(fields: [evidenceId], references: [id])
}

model CaseUser {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  caseId      String
  userId      String
  permissions String @default("0") @db.VarBit

  case Case @relation(fields: [caseId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

model MediaEvidence {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  originCoordinates String

  userId    String
  createdBy User   @relation(fields: [userId], references: [id])

  cases CaseToMediaEvidence[]
}

model TaggedEvidence {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  containerType             String
  originCoordinates         String
  originLocationDescription String

  itemType    String
  description String

  cases CaseToTaggedEvidence[]
}

model User {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email    String @unique
  password String

  firstName String
  lastName  String
  rank      Int    @default(0)

  cases         CaseUser[]
  AuditLog      AuditLog[]
  MediaEvidence MediaEvidence[]
}

model AuditLog {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId    String
  action    String
  ip        String
  userAgent String

  oldData String
  newData String

  user User @relation(fields: [userId], references: [id])
}
